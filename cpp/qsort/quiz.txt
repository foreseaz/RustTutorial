#include <string>
#include <cstring>
#include <fstream>
#include <iostream>
#include <vector>
#include <cassert>
using namespace std;

typedef vector<string> Words;

Words mysort(Words src)
{
	...
}
int main()
{
	Words a;
	a.push_back("zoro");
	a.push_back("apple");
	a.push_back("question");
	a.push_back("counter");
	a.push_back("strike");
	a.push_back("delta");

	auto c = mysort(a);
	cout << "***************************" << endl;
	for (auto &b : c)
	{
		cout << b << endl;
	}

	return 0;
}


complete qsort algorithm
------------------------------
algorithm quicksort(A, lo, hi) is
    if lo < hi then
        p := partition(A, lo, hi)
        quicksort(A, lo, p - 1)
        quicksort(A, p + 1, hi)

algorithm partition(A, lo, hi) is
    pivot := A[hi]
    i := lo
    for j := lo to hi - 1 do
        if A[j] < pivot then
            swap A[i] with A[j]
            i := i + 1
    swap A[i] with A[hi]
    return i
------------------------------